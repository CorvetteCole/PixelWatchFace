/*
 * Locationforecast_2_0
 * Weather forecast for a specified place
 *
 * OpenAPI spec version: 2.0
 * Contact: weatherapi-adm@met.no
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.corvettecole.pixelwatchface.api.met.models;

import com.google.gson.annotations.SerializedName;
import java.math.BigDecimal;
import java.util.Objects;

/**
 * Weather parameters valid for a specified time period.
 */
public class ForecastTimePeriod {

  @SerializedName("precipitation_amount_max")
  private BigDecimal precipitationAmountMax = null;

  @SerializedName("precipitation_amount")
  private BigDecimal precipitationAmount = null;

  @SerializedName("probability_of_thunder")
  private BigDecimal probabilityOfThunder = null;

  @SerializedName("air_temperature_max")
  private BigDecimal airTemperatureMax = null;

  @SerializedName("air_temperature_min")
  private BigDecimal airTemperatureMin = null;

  @SerializedName("ultraviolet_index_clear_sky_max")
  private BigDecimal ultravioletIndexClearSkyMax = null;

  @SerializedName("probability_of_precipitation")
  private BigDecimal probabilityOfPrecipitation = null;

  @SerializedName("precipitation_amount_min")
  private BigDecimal precipitationAmountMin = null;

  public ForecastTimePeriod precipitationAmountMax(BigDecimal precipitationAmountMax) {
    this.precipitationAmountMax = precipitationAmountMax;
    return this;
  }

  /**
   * Maximum amount of precipitation for this period
   *
   * @return precipitationAmountMax
   **/
  public BigDecimal getPrecipitationAmountMax() {
    return precipitationAmountMax;
  }

  public void setPrecipitationAmountMax(BigDecimal precipitationAmountMax) {
    this.precipitationAmountMax = precipitationAmountMax;
  }

  public ForecastTimePeriod precipitationAmount(BigDecimal precipitationAmount) {
    this.precipitationAmount = precipitationAmount;
    return this;
  }

  /**
   * Best estimate for amount of precipitation for this period
   *
   * @return precipitationAmount
   **/
  public BigDecimal getPrecipitationAmount() {
    return precipitationAmount;
  }

  public void setPrecipitationAmount(BigDecimal precipitationAmount) {
    this.precipitationAmount = precipitationAmount;
  }

  public ForecastTimePeriod probabilityOfThunder(BigDecimal probabilityOfThunder) {
    this.probabilityOfThunder = probabilityOfThunder;
    return this;
  }

  /**
   * Probability of any thunder coming for this period
   *
   * @return probabilityOfThunder
   **/
  public BigDecimal getProbabilityOfThunder() {
    return probabilityOfThunder;
  }

  public void setProbabilityOfThunder(BigDecimal probabilityOfThunder) {
    this.probabilityOfThunder = probabilityOfThunder;
  }

  public ForecastTimePeriod airTemperatureMax(BigDecimal airTemperatureMax) {
    this.airTemperatureMax = airTemperatureMax;
    return this;
  }

  /**
   * Maximum air temperature in period
   *
   * @return airTemperatureMax
   **/
  public BigDecimal getAirTemperatureMax() {
    return airTemperatureMax;
  }

  public void setAirTemperatureMax(BigDecimal airTemperatureMax) {
    this.airTemperatureMax = airTemperatureMax;
  }

  public ForecastTimePeriod airTemperatureMin(BigDecimal airTemperatureMin) {
    this.airTemperatureMin = airTemperatureMin;
    return this;
  }

  /**
   * Minimum air temperature in period
   *
   * @return airTemperatureMin
   **/
  public BigDecimal getAirTemperatureMin() {
    return airTemperatureMin;
  }

  public void setAirTemperatureMin(BigDecimal airTemperatureMin) {
    this.airTemperatureMin = airTemperatureMin;
  }

  public ForecastTimePeriod ultravioletIndexClearSkyMax(BigDecimal ultravioletIndexClearSkyMax) {
    this.ultravioletIndexClearSkyMax = ultravioletIndexClearSkyMax;
    return this;
  }

  /**
   * Maximum ultraviolet index if sky is clear
   *
   * @return ultravioletIndexClearSkyMax
   **/
  public BigDecimal getUltravioletIndexClearSkyMax() {
    return ultravioletIndexClearSkyMax;
  }

  public void setUltravioletIndexClearSkyMax(BigDecimal ultravioletIndexClearSkyMax) {
    this.ultravioletIndexClearSkyMax = ultravioletIndexClearSkyMax;
  }

  public ForecastTimePeriod probabilityOfPrecipitation(BigDecimal probabilityOfPrecipitation) {
    this.probabilityOfPrecipitation = probabilityOfPrecipitation;
    return this;
  }

  /**
   * Probability of any precipitation coming for this period
   *
   * @return probabilityOfPrecipitation
   **/
  public BigDecimal getProbabilityOfPrecipitation() {
    return probabilityOfPrecipitation;
  }

  public void setProbabilityOfPrecipitation(BigDecimal probabilityOfPrecipitation) {
    this.probabilityOfPrecipitation = probabilityOfPrecipitation;
  }

  public ForecastTimePeriod precipitationAmountMin(BigDecimal precipitationAmountMin) {
    this.precipitationAmountMin = precipitationAmountMin;
    return this;
  }

  /**
   * Minimum amount of precipitation for this period
   *
   * @return precipitationAmountMin
   **/
  public BigDecimal getPrecipitationAmountMin() {
    return precipitationAmountMin;
  }

  public void setPrecipitationAmountMin(BigDecimal precipitationAmountMin) {
    this.precipitationAmountMin = precipitationAmountMin;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForecastTimePeriod forecastTimePeriod = (ForecastTimePeriod) o;
    return Objects.equals(this.precipitationAmountMax, forecastTimePeriod.precipitationAmountMax) &&
        Objects.equals(this.precipitationAmount, forecastTimePeriod.precipitationAmount) &&
        Objects.equals(this.probabilityOfThunder, forecastTimePeriod.probabilityOfThunder) &&
        Objects.equals(this.airTemperatureMax, forecastTimePeriod.airTemperatureMax) &&
        Objects.equals(this.airTemperatureMin, forecastTimePeriod.airTemperatureMin) &&
        Objects.equals(this.ultravioletIndexClearSkyMax,
            forecastTimePeriod.ultravioletIndexClearSkyMax) &&
        Objects
            .equals(this.probabilityOfPrecipitation, forecastTimePeriod.probabilityOfPrecipitation)
        &&
        Objects.equals(this.precipitationAmountMin, forecastTimePeriod.precipitationAmountMin);
  }

  @Override
  public int hashCode() {
    return Objects
        .hash(precipitationAmountMax, precipitationAmount, probabilityOfThunder, airTemperatureMax,
            airTemperatureMin, ultravioletIndexClearSkyMax, probabilityOfPrecipitation,
            precipitationAmountMin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastTimePeriod {\n");

    sb.append("    precipitationAmountMax: ").append(toIndentedString(precipitationAmountMax))
        .append("\n");
    sb.append("    precipitationAmount: ").append(toIndentedString(precipitationAmount))
        .append("\n");
    sb.append("    probabilityOfThunder: ").append(toIndentedString(probabilityOfThunder))
        .append("\n");
    sb.append("    airTemperatureMax: ").append(toIndentedString(airTemperatureMax)).append("\n");
    sb.append("    airTemperatureMin: ").append(toIndentedString(airTemperatureMin)).append("\n");
    sb.append("    ultravioletIndexClearSkyMax: ")
        .append(toIndentedString(ultravioletIndexClearSkyMax)).append("\n");
    sb.append("    probabilityOfPrecipitation: ")
        .append(toIndentedString(probabilityOfPrecipitation)).append("\n");
    sb.append("    precipitationAmountMin: ").append(toIndentedString(precipitationAmountMin))
        .append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first
   * line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

