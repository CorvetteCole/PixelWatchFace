/*
 * Locationforecast_2_0
 * Weather forecast for a specified place
 *
 * OpenAPI spec version: 2.0
 * Contact: weatherapi-adm@met.no
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.corvettecole.pixelwatchface.api.met.models;

import com.google.gson.annotations.SerializedName;
import java.util.Objects;


/**
 * ForecastUnits
 */
public class ForecastUnits {

  @SerializedName("probability_of_thunder")
  private String probabilityOfThunder = null;

  @SerializedName("wind_speed_of_gust")
  private String windSpeedOfGust = null;

  @SerializedName("precipitation_amount")
  private String precipitationAmount = null;

  @SerializedName("air_pressure_at_sea_level")
  private String airPressureAtSeaLevel = null;

  @SerializedName("air_temperature_max")
  private String airTemperatureMax = null;

  @SerializedName("cloud_area_fraction_medium")
  private String cloudAreaFractionMedium = null;

  @SerializedName("cloud_area_fraction_low")
  private String cloudAreaFractionLow = null;

  @SerializedName("cloud_area_fraction_high")
  private String cloudAreaFractionHigh = null;

  @SerializedName("ultraviolet_index_clear_sky_max")
  private String ultravioletIndexClearSkyMax = null;

  @SerializedName("relative_humidity")
  private String relativeHumidity = null;

  @SerializedName("wind_speed")
  private String windSpeed = null;

  @SerializedName("precipitation_amount_max")
  private String precipitationAmountMax = null;

  @SerializedName("cloud_area_fraction")
  private String cloudAreaFraction = null;

  @SerializedName("dew_point_temperature")
  private String dewPointTemperature = null;

  @SerializedName("air_temperature_min")
  private String airTemperatureMin = null;

  @SerializedName("fog_area_fraction")
  private String fogAreaFraction = null;

  @SerializedName("wind_from_direction")
  private String windFromDirection = null;

  @SerializedName("air_temperature")
  private String airTemperature = null;

  @SerializedName("precipitation_amount_min")
  private String precipitationAmountMin = null;

  @SerializedName("probability_of_precipitation")
  private String probabilityOfPrecipitation = null;

  public ForecastUnits probabilityOfThunder(String probabilityOfThunder) {
    this.probabilityOfThunder = probabilityOfThunder;
    return this;
  }

  /**
   * Get probabilityOfThunder
   *
   * @return probabilityOfThunder
   **/
  public String getProbabilityOfThunder() {
    return probabilityOfThunder;
  }

  public void setProbabilityOfThunder(String probabilityOfThunder) {
    this.probabilityOfThunder = probabilityOfThunder;
  }

  public ForecastUnits windSpeedOfGust(String windSpeedOfGust) {
    this.windSpeedOfGust = windSpeedOfGust;
    return this;
  }

  /**
   * Get windSpeedOfGust
   *
   * @return windSpeedOfGust
   **/
  public String getWindSpeedOfGust() {
    return windSpeedOfGust;
  }

  public void setWindSpeedOfGust(String windSpeedOfGust) {
    this.windSpeedOfGust = windSpeedOfGust;
  }

  public ForecastUnits precipitationAmount(String precipitationAmount) {
    this.precipitationAmount = precipitationAmount;
    return this;
  }

  /**
   * Get precipitationAmount
   *
   * @return precipitationAmount
   **/
  public String getPrecipitationAmount() {
    return precipitationAmount;
  }

  public void setPrecipitationAmount(String precipitationAmount) {
    this.precipitationAmount = precipitationAmount;
  }

  public ForecastUnits airPressureAtSeaLevel(String airPressureAtSeaLevel) {
    this.airPressureAtSeaLevel = airPressureAtSeaLevel;
    return this;
  }

  /**
   * Get airPressureAtSeaLevel
   *
   * @return airPressureAtSeaLevel
   **/
  public String getAirPressureAtSeaLevel() {
    return airPressureAtSeaLevel;
  }

  public void setAirPressureAtSeaLevel(String airPressureAtSeaLevel) {
    this.airPressureAtSeaLevel = airPressureAtSeaLevel;
  }

  public ForecastUnits airTemperatureMax(String airTemperatureMax) {
    this.airTemperatureMax = airTemperatureMax;
    return this;
  }

  /**
   * Get airTemperatureMax
   *
   * @return airTemperatureMax
   **/
  public String getAirTemperatureMax() {
    return airTemperatureMax;
  }

  public void setAirTemperatureMax(String airTemperatureMax) {
    this.airTemperatureMax = airTemperatureMax;
  }

  public ForecastUnits cloudAreaFractionMedium(String cloudAreaFractionMedium) {
    this.cloudAreaFractionMedium = cloudAreaFractionMedium;
    return this;
  }

  /**
   * Get cloudAreaFractionMedium
   *
   * @return cloudAreaFractionMedium
   **/
  public String getCloudAreaFractionMedium() {
    return cloudAreaFractionMedium;
  }

  public void setCloudAreaFractionMedium(String cloudAreaFractionMedium) {
    this.cloudAreaFractionMedium = cloudAreaFractionMedium;
  }

  public ForecastUnits cloudAreaFractionLow(String cloudAreaFractionLow) {
    this.cloudAreaFractionLow = cloudAreaFractionLow;
    return this;
  }

  /**
   * Get cloudAreaFractionLow
   *
   * @return cloudAreaFractionLow
   **/
  public String getCloudAreaFractionLow() {
    return cloudAreaFractionLow;
  }

  public void setCloudAreaFractionLow(String cloudAreaFractionLow) {
    this.cloudAreaFractionLow = cloudAreaFractionLow;
  }

  public ForecastUnits cloudAreaFractionHigh(String cloudAreaFractionHigh) {
    this.cloudAreaFractionHigh = cloudAreaFractionHigh;
    return this;
  }

  /**
   * Get cloudAreaFractionHigh
   *
   * @return cloudAreaFractionHigh
   **/
  public String getCloudAreaFractionHigh() {
    return cloudAreaFractionHigh;
  }

  public void setCloudAreaFractionHigh(String cloudAreaFractionHigh) {
    this.cloudAreaFractionHigh = cloudAreaFractionHigh;
  }

  public ForecastUnits ultravioletIndexClearSkyMax(String ultravioletIndexClearSkyMax) {
    this.ultravioletIndexClearSkyMax = ultravioletIndexClearSkyMax;
    return this;
  }

  /**
   * Get ultravioletIndexClearSkyMax
   *
   * @return ultravioletIndexClearSkyMax
   **/
  public String getUltravioletIndexClearSkyMax() {
    return ultravioletIndexClearSkyMax;
  }

  public void setUltravioletIndexClearSkyMax(String ultravioletIndexClearSkyMax) {
    this.ultravioletIndexClearSkyMax = ultravioletIndexClearSkyMax;
  }

  public ForecastUnits relativeHumidity(String relativeHumidity) {
    this.relativeHumidity = relativeHumidity;
    return this;
  }

  /**
   * Get relativeHumidity
   *
   * @return relativeHumidity
   **/
  public String getRelativeHumidity() {
    return relativeHumidity;
  }

  public void setRelativeHumidity(String relativeHumidity) {
    this.relativeHumidity = relativeHumidity;
  }

  public ForecastUnits windSpeed(String windSpeed) {
    this.windSpeed = windSpeed;
    return this;
  }

  /**
   * Get windSpeed
   *
   * @return windSpeed
   **/
  public String getWindSpeed() {
    return windSpeed;
  }

  public void setWindSpeed(String windSpeed) {
    this.windSpeed = windSpeed;
  }

  public ForecastUnits precipitationAmountMax(String precipitationAmountMax) {
    this.precipitationAmountMax = precipitationAmountMax;
    return this;
  }

  /**
   * Get precipitationAmountMax
   *
   * @return precipitationAmountMax
   **/
  public String getPrecipitationAmountMax() {
    return precipitationAmountMax;
  }

  public void setPrecipitationAmountMax(String precipitationAmountMax) {
    this.precipitationAmountMax = precipitationAmountMax;
  }

  public ForecastUnits cloudAreaFraction(String cloudAreaFraction) {
    this.cloudAreaFraction = cloudAreaFraction;
    return this;
  }

  /**
   * Get cloudAreaFraction
   *
   * @return cloudAreaFraction
   **/
  public String getCloudAreaFraction() {
    return cloudAreaFraction;
  }

  public void setCloudAreaFraction(String cloudAreaFraction) {
    this.cloudAreaFraction = cloudAreaFraction;
  }

  public ForecastUnits dewPointTemperature(String dewPointTemperature) {
    this.dewPointTemperature = dewPointTemperature;
    return this;
  }

  /**
   * Get dewPointTemperature
   *
   * @return dewPointTemperature
   **/
  public String getDewPointTemperature() {
    return dewPointTemperature;
  }

  public void setDewPointTemperature(String dewPointTemperature) {
    this.dewPointTemperature = dewPointTemperature;
  }

  public ForecastUnits airTemperatureMin(String airTemperatureMin) {
    this.airTemperatureMin = airTemperatureMin;
    return this;
  }

  /**
   * Get airTemperatureMin
   *
   * @return airTemperatureMin
   **/
  public String getAirTemperatureMin() {
    return airTemperatureMin;
  }

  public void setAirTemperatureMin(String airTemperatureMin) {
    this.airTemperatureMin = airTemperatureMin;
  }

  public ForecastUnits fogAreaFraction(String fogAreaFraction) {
    this.fogAreaFraction = fogAreaFraction;
    return this;
  }

  /**
   * Get fogAreaFraction
   *
   * @return fogAreaFraction
   **/
  public String getFogAreaFraction() {
    return fogAreaFraction;
  }

  public void setFogAreaFraction(String fogAreaFraction) {
    this.fogAreaFraction = fogAreaFraction;
  }

  public ForecastUnits windFromDirection(String windFromDirection) {
    this.windFromDirection = windFromDirection;
    return this;
  }

  /**
   * Get windFromDirection
   *
   * @return windFromDirection
   **/
  public String getWindFromDirection() {
    return windFromDirection;
  }

  public void setWindFromDirection(String windFromDirection) {
    this.windFromDirection = windFromDirection;
  }

  public ForecastUnits airTemperature(String airTemperature) {
    this.airTemperature = airTemperature;
    return this;
  }

  /**
   * Get airTemperature
   *
   * @return airTemperature
   **/
  public String getAirTemperature() {
    return airTemperature;
  }

  public void setAirTemperature(String airTemperature) {
    this.airTemperature = airTemperature;
  }

  public ForecastUnits precipitationAmountMin(String precipitationAmountMin) {
    this.precipitationAmountMin = precipitationAmountMin;
    return this;
  }

  /**
   * Get precipitationAmountMin
   *
   * @return precipitationAmountMin
   **/
  public String getPrecipitationAmountMin() {
    return precipitationAmountMin;
  }

  public void setPrecipitationAmountMin(String precipitationAmountMin) {
    this.precipitationAmountMin = precipitationAmountMin;
  }

  public ForecastUnits probabilityOfPrecipitation(String probabilityOfPrecipitation) {
    this.probabilityOfPrecipitation = probabilityOfPrecipitation;
    return this;
  }

  /**
   * Get probabilityOfPrecipitation
   *
   * @return probabilityOfPrecipitation
   **/
  public String getProbabilityOfPrecipitation() {
    return probabilityOfPrecipitation;
  }

  public void setProbabilityOfPrecipitation(String probabilityOfPrecipitation) {
    this.probabilityOfPrecipitation = probabilityOfPrecipitation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForecastUnits forecastUnits = (ForecastUnits) o;
    return Objects.equals(this.probabilityOfThunder, forecastUnits.probabilityOfThunder) &&
        Objects.equals(this.windSpeedOfGust, forecastUnits.windSpeedOfGust) &&
        Objects.equals(this.precipitationAmount, forecastUnits.precipitationAmount) &&
        Objects.equals(this.airPressureAtSeaLevel, forecastUnits.airPressureAtSeaLevel) &&
        Objects.equals(this.airTemperatureMax, forecastUnits.airTemperatureMax) &&
        Objects.equals(this.cloudAreaFractionMedium, forecastUnits.cloudAreaFractionMedium) &&
        Objects.equals(this.cloudAreaFractionLow, forecastUnits.cloudAreaFractionLow) &&
        Objects.equals(this.cloudAreaFractionHigh, forecastUnits.cloudAreaFractionHigh) &&
        Objects.equals(this.ultravioletIndexClearSkyMax, forecastUnits.ultravioletIndexClearSkyMax)
        &&
        Objects.equals(this.relativeHumidity, forecastUnits.relativeHumidity) &&
        Objects.equals(this.windSpeed, forecastUnits.windSpeed) &&
        Objects.equals(this.precipitationAmountMax, forecastUnits.precipitationAmountMax) &&
        Objects.equals(this.cloudAreaFraction, forecastUnits.cloudAreaFraction) &&
        Objects.equals(this.dewPointTemperature, forecastUnits.dewPointTemperature) &&
        Objects.equals(this.airTemperatureMin, forecastUnits.airTemperatureMin) &&
        Objects.equals(this.fogAreaFraction, forecastUnits.fogAreaFraction) &&
        Objects.equals(this.windFromDirection, forecastUnits.windFromDirection) &&
        Objects.equals(this.airTemperature, forecastUnits.airTemperature) &&
        Objects.equals(this.precipitationAmountMin, forecastUnits.precipitationAmountMin) &&
        Objects.equals(this.probabilityOfPrecipitation, forecastUnits.probabilityOfPrecipitation);
  }

  @Override
  public int hashCode() {
    return Objects
        .hash(probabilityOfThunder, windSpeedOfGust, precipitationAmount, airPressureAtSeaLevel,
            airTemperatureMax, cloudAreaFractionMedium, cloudAreaFractionLow, cloudAreaFractionHigh,
            ultravioletIndexClearSkyMax, relativeHumidity, windSpeed, precipitationAmountMax,
            cloudAreaFraction, dewPointTemperature, airTemperatureMin, fogAreaFraction,
            windFromDirection, airTemperature, precipitationAmountMin, probabilityOfPrecipitation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastUnits {\n");

    sb.append("    probabilityOfThunder: ").append(toIndentedString(probabilityOfThunder))
        .append("\n");
    sb.append("    windSpeedOfGust: ").append(toIndentedString(windSpeedOfGust)).append("\n");
    sb.append("    precipitationAmount: ").append(toIndentedString(precipitationAmount))
        .append("\n");
    sb.append("    airPressureAtSeaLevel: ").append(toIndentedString(airPressureAtSeaLevel))
        .append("\n");
    sb.append("    airTemperatureMax: ").append(toIndentedString(airTemperatureMax)).append("\n");
    sb.append("    cloudAreaFractionMedium: ").append(toIndentedString(cloudAreaFractionMedium))
        .append("\n");
    sb.append("    cloudAreaFractionLow: ").append(toIndentedString(cloudAreaFractionLow))
        .append("\n");
    sb.append("    cloudAreaFractionHigh: ").append(toIndentedString(cloudAreaFractionHigh))
        .append("\n");
    sb.append("    ultravioletIndexClearSkyMax: ")
        .append(toIndentedString(ultravioletIndexClearSkyMax)).append("\n");
    sb.append("    relativeHumidity: ").append(toIndentedString(relativeHumidity)).append("\n");
    sb.append("    windSpeed: ").append(toIndentedString(windSpeed)).append("\n");
    sb.append("    precipitationAmountMax: ").append(toIndentedString(precipitationAmountMax))
        .append("\n");
    sb.append("    cloudAreaFraction: ").append(toIndentedString(cloudAreaFraction)).append("\n");
    sb.append("    dewPointTemperature: ").append(toIndentedString(dewPointTemperature))
        .append("\n");
    sb.append("    airTemperatureMin: ").append(toIndentedString(airTemperatureMin)).append("\n");
    sb.append("    fogAreaFraction: ").append(toIndentedString(fogAreaFraction)).append("\n");
    sb.append("    windFromDirection: ").append(toIndentedString(windFromDirection)).append("\n");
    sb.append("    airTemperature: ").append(toIndentedString(airTemperature)).append("\n");
    sb.append("    precipitationAmountMin: ").append(toIndentedString(precipitationAmountMin))
        .append("\n");
    sb.append("    probabilityOfPrecipitation: ")
        .append(toIndentedString(probabilityOfPrecipitation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first
   * line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

